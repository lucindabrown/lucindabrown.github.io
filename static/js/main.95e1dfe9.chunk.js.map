{"version":3,"sources":["School/School.js","App.js","serviceWorker.js","index.js"],"names":["school","props","imgmap","data","short_name","spots","grade","applicants","probability","ktranslator","lowest_grade","phbao","rejections","Math","round","probscore","react_default","a","createElement","className","src","alt","stops","map","object","i","onClick","click","name","highest_grade","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","schools","gifted","handleGradeChange","bind","assertThisInitialized","handleRejectionsChange","handlePhbaoChange","handleGiftedChange","_this2","fetch","then","res","json","setState","catch","console","log","event","target","value","_this3","type","onChange","min","max","checked","School_School","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95e1dfe9.chunk.js","sourcesContent":["import React from 'react';\n\n\nimport './School.css';\n\nconst school = ( props ) => {\n\t\n\tlet imgmap = \"https://lucindabrown.github.io/data/School/images/\"+props.data.short_name+\"-map.png\";\n    let spots = props.data.spots[props.grade];\n    let applicants = props.data.applicants[props.grade];\n    let probability = 0;\n    let ktranslator = props.data.lowest_grade;\n    if(applicants > 0){\n    \tprobability = 1.0*spots/applicants*12;\n    \tif (props.phbao) {\n    \t\tprobability +=1;\n    \t}\n    \tprobability += props.rejections-1;\n    \tif (probability < 1) {\n    \t\tprobability = 1;\n    \t}\n\n    \tif (probability >5) {\n    \t\tprobability = 5;\n    \t}\n    \tprobability = Math.round(probability);\n    }\n    let probscore = \"https://lucindabrown.github.io/data/School/images/\"+probability+\".svg\";\n    \n\n    if(ktranslator < 1){\n        ktranslator = \"K\";\n    }\n    \n    \n    return (\n        <div className=\"school\"> \n            <div className=\"box\">\n                <div className=\"map-box\">\n                <img src={imgmap} alt=\"map\" className=\"school-map\"/>\n                <p className=\"card-subhead\">Buses Stop In </p>\n                    <ul>{props.data.stops.map(\n                    (object, i) => (\n                    <li className=\"card-nabe\">{object}</li>)\n                    )\n                    } </ul>\n                </div>\n                <p onClick={props.click} className=\"school-title\"> \n                {props.data.name}</p>\n                <p className=\"card-numbers\"> <span className=\"heavy\">{spots}</span> spots for <span className=\"heavy\">{applicants}</span> applicants</p>\n                <p className=\"card-numbers\">Grades {ktranslator} - {props.data.highest_grade}</p>\n            \n            \n                <img src={probscore} alt=\"prob\" className=\"prob-score\"/>\n            </div>\n        </div>\n    );\n}\nexport default school;","import React, { Component } from 'react';\nimport './App.css';\nimport School from './School/School';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    schools: [\n       ],\n    stops: [\n    ],\n    grade: 2,\n    rejections: 0,\n    gifted: true,\n    phbao: false\n  };\n\n  this.handleGradeChange = this.handleGradeChange.bind(this);\n  this.handleRejectionsChange = this.handleRejectionsChange.bind(this);\n  this.handlePhbaoChange = this.handlePhbaoChange.bind(this);\n  this.handleGiftedChange = this.handleGiftedChange.bind(this);\n  }\n  \n\n\n  componentDidMount() {\n    fetch('https://lucindabrown.github.io/data/schools.json')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ schools: data });\n    })\n    .catch(console.log);\n  }\n\n toggleNeighborhood(event) {\n    //this.setState( {\n    //  persons: [\n    //    { name: 'Max', age: 28 },\n    //   { name: event.target.value, age: 29 },\n    //    { name: 'Stephanie', age: 26 }\n    //  ]\n    // } )\n  }\n\n  handleGradeChange(event) {\n    this.setState({grade: event.target.value});\n  }\n\n  handleRejectionsChange(event) {\n    this.setState({rejections: event.target.value});\n  }\n\n  handlePhbaoChange(event) {\n    this.setState({phbao: !this.state.phbao});\n  }\n\n   handleGiftedChange(event) {\n    this.setState({gifted: !this.state.gifted});\n  }\n  \n  render () {\n    const style = {\n      backgroundColor: 'rgb(42, 103, 255)',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    return (\n      <div className=\"App\">\n        <div className=\"hero\">\n          <div className=\"copy\">\n            <p className=\"lausd\">los angeles unified school district</p>\n            <h1>Magnet School Finder</h1>\n            <h2><p>Discover some of the most popular K-5 magnets in Los Angeles.</p>\n\n            <p>Learn which bus stops serve which schools. </p>\n\n            <p><strong>Understand the odds of getting in at every grade level.</strong></p>\n            </h2>\n          </div>\n        </div>\n        <div className=\"map-module\">\n          <div className=\"copy\">\n          <h2><p>There are over 1200 LAUSD bus stops operating every day. They take kids across town and back, for free, as part of the magnet program.</p>\n          </h2>\n          </div>\n        </div>\n        <div className=\"controls-container\">\n          <h2 className=\"odds\">Understand Your Odds</h2>\n          <div className=\"knob\">\n            <label className=\"label-toggle\">My child will be in this grade next school year:</label>\n            <input type=\"number\" value={this.state.grade} onChange={this.handleGradeChange} min=\"0\" max=\"5\" />\n          </div>\n        \n          <div className=\"knob\">\n            <label className=\"label-toggle\">Number of consecutive years my child has been rejected by the lottery</label>\n            <input type=\"number\" value={this.state.rejections} onChange={this.handleRejectionsChange} min=\"0\" max=\"3\" /> \n          </div>\n        \n          <div className=\"knob\">\n            <input type=\"checkbox\" checked={this.state.phbao} onChange={this.handlePhbaoChange} />\n            <label className=\"label-toggle\">My home school is PHBAO</label>\n          </div>\n        \n          <div className=\"knob\">\n            <input type=\"checkbox\" checked={this.state.gifted} onChange={this.handleGiftedChange} />\n            <label className=\"label-toggle\">My child has tested gifted or is likely to test gifted in second grade</label>\n          </div>\n        </div>\n\n        <div className=\"card-container\">\n          {this.state.schools.map(\n              (object, i) => (\n                (!this.state.gifted && object.gifted\n                  || object.lowest_grade > this.state.grade ) ? false :\n                <School data={object} \n                grade = {this.state.grade}\n                rejections = {this.state.rejections}\n                gifted = {this.state.gifted}\n                phbao = {this.state.phbao} />\n              )\n          )}\n        </div>\n      </div>\n    );\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}